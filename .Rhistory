state$SSBio[totBioidx] <- state$Biomass[totBioidx]
rmidx <- which(is.na(state$SSBio) == 0)
state$F0[which(is.na(state$F0) == 1)] <- state$Catch[which(is.na(state$F0) == 1)]/
state$SSBio[which(is.na(state$F0) == 1)]
state$wInf[3]<- 15000
source('baseparameters.R')
source('IterateSpectrum.R')
rm(param)
h <- 20
kappaPP <- 5e5
param <- baseparameters(state$wInf, kappa = 5e5, h = h) # Kappa estimated from LME
param$tEnd <- 80
S <- NA
param$F0 <- state$F0
param$fishing <- "Trawl"
ptm <- proc.time()
S <- IterateSpectrum(param,S)
proc.time()-ptm
plotSpectrum(param,S)
plotBiomasstime(param,S)
plotBiomass(param,S)
compareBiomass(param,S,state)
# Plot the results
# Make sure the Rp/Rmax isn't too high
# Calculate species specific values of maximum uptake (h)
h <- 3*state$k/(param$alpha*state$wInf^(-1/3))
h[is.na(h)] <- mean(h,na.rm=T)
cV <- 1/mean(h,na.rm=T)
# hNew
kappaNew <- 694348
5333/6.1
5333*6.1
23700*12
284400+11000*4
24/1200
install.packages('VAST')
install.packages("remotes")
remotes::install_github("James-Thorson/VAST")
install_github("nwfsc-assess/geostatistical_delta-GLMM")
library(devtools)
install_github("nwfsc-assess/geostatistical_delta-GLMM")
install_github("nwfsc-assess/geostatistical_delta-GLMM", force = true)
install_github("nwfsc-assess/geostatistical_delta-GLMM", force = TRUE)
28700*12+(11500*4)/2
remotes::install_github("tokami/mse)
remotes::install_github("tokami/mse)
remotes::install_github("tokami/mse")
0^1.6
library(reshape2)
library(gtools)
library(patchwork)
library(tidyverse)
library(TMB)
source('R/calcSSB0.R')
source('R/run_agebased_model_true_Catch.R')
source('R/load_data_seasons.R')
# Load the data frame with eggs
eggs <- read.csv('data/fecundityEggSizeFemaleSize.csv')
eggs$weight <- 0.01*(eggs$FemaleSize_mm/10)^3 # Fix this later
# All eggs as a function of size
ggplot(eggs, aes(x = weight, y = exp(lnFecundity), color = Species))+
geom_point()+theme_bw()+theme(legend.position = 'none')+
geom_smooth(method = 'lm')+
scale_x_log10()+
scale_y_log10()
#
unique(eggs$Species)
### Run bulk sims ###
require('scam')
require('tidyverse')
require('patchwork')
source('R/fn_sims.R')
source('R/calcSSB0.R')
source('R/run_agebased_model_true_Catch.R')
source('R/load_data_seasons.R')
source('R/est_eggs.R')
source('R/plotRecruitment.R')
source('R/getEquilibrium.R')
source('R/runScenarios.R')
eggs <- read.csv('data/fecundityEggSizeFemaleSize.csv')
eggs$weight <- 0.01*(eggs$FemaleSize_mm/10)^3 # Fix this later
# All eggs as a function of size
eggs <- eggs %>% group_by(Species) %>%
mutate(relweight = weight/max(weight),
releggs = Fecundity_nOfEggs_per_female/max(Fecundity_nOfEggs_per_female)
)
x <- eggs[is.na(eggs$relweight) == 0,]$relweight
y <- eggs[is.na(eggs$relweight) == 0,]$releggs
# all relative eggs
#parms <- est_eggs(x,y)
# Just take the cod eggs most of the other fish are not really big fisheries
cod <- eggs[eggs$Species == 'Gadus morhua',]
cod$weight <- 0.01*(cod$FemaleSize_mm/10)^3 # Fix the parameters for weight lenght to whatever here
codest <- est_eggs(x = cod$weight,
y = cod$Fecundity_nOfEggs_per_female)
# Life history
Linf <- 50
K <-  0.4
SDR <- 0.2
rho <- c(.01,.1, .5, .7, .99) # Try five different auto correlation coefficients
maxage <- 10
tau <- 3
M0 <- .4
tau_sel <- 2
egg.scale <- 1e5
R0 = 1000
recruitment = 'BH_R'
nspecies <- 1
F0 <- seq(0.1,1, length.out = 5)
# Calculate Fmsy as a function of LH parameters
Fmsy <- seq(0,2, length.out = 50)
Catch <- data.frame(
F0 = rep(Fmsy, nspecies),
species = rep(Linf, each = length(Fmsy)*nspecies),
Catch = NA
)
for(i in 1:nspecies){
for(j in 1:length(Fmsy)){
df <- load_data_seasons(nseason = 1,
nyear = 100,# Set up parameters
Linf = Linf[i],
maxage = maxage[i],
tau = tau[i],
K = K[i],
t0 = 0,
tau_sel = tau_sel[i],
M= M0[i],
SDR = 0, # Recruitment deviations - set to zero to calculate lambda
fishing.type = 'constant',
mortality = 'constant',
recruitment = recruitment,
negg = codest$parameters[['alpha.lin']]/egg.scale[i],
eggbeta = codest$parameters[['beta.lin']],
F0 = Fmsy[j], # Set to zero to calc lambda
R0 = R0) # Specify parameters
tmp <- run.agebased.true.catch(df)
Catch[Catch$species == Linf[i] & Catch$F0 == Fmsy[j],]$Catch <- tmp$Catch[df$tEnd]
}
}
ggplot(Catch, aes(x = F0, y = Catch, color = as.factor(species)))+geom_line()+theme_classic()+
facet_wrap(~species, scales = 'free_y')+theme(legend.position = 'none')
F0 <- 0.2
for(i in 1:length(rho)){
df.in <- fn_sims(tau = tau,
Linf = Linf,
maxage = maxage,
K = K,
t0 = 0,
SDR = SDR,
F0 = F0,
M = M0,
tau_sel = tau_sel,
egg.scale = egg.scale,
R0 = R0,
rho = rho[i],
recruitment = 'BH_R',
lambda.slope = .7,
mortality = 'constant',
fishing.type = 'AR',
recruitment.type = 'AR'
)
if(i == 1){
df.out <- df.in[[1]]
df.N <- df.in[[3]]
df.save <- df.in[[2]]
}else{
df.out <- rbind(df.out, df.in[[1]])
df.N <- rbind(df.N, df.in[[3]])
df.save <- rbind(df.save, df.in[[2]])
}
}
# remove the ones with zero recruitment
df.plot <- df.out[df.out$rec>1,]
p1 <- ggplot(df.plot[df.plot$years > 50 ,], aes(x = mweight, y = SSBprop, color = model))+geom_point()+
facet_wrap(~rho, scales = 'free')+theme_bw()
p2 <- ggplot(df.plot[df.plot$years > 50 ,], aes(x = SSBprop, y = Rdev, color = model))+geom_point()+
facet_wrap(~rho, scales = 'free')+theme_bw()+geom_smooth(method = 'lm')
p3 <- ggplot(df.plot[df.plot$years > 50 ,], aes(x = SSBprop, y = recR0, color = model))+geom_point()+
facet_wrap(~rho, scales = 'free')+theme_bw()+geom_smooth(method = 'lm')
p1/p2/p3
prop.plot <- df.plot %>% group_by(model, run, Linf, SDR, K, tau, rho) %>% summarise(SSBcorRR0  = cor(SSBprop, recR0),
weightcorRR0  = cor(mweight, recR0),
agecorRR0  = cor(mage, recR0),
SSBcorRtot  = cor(SSBprop, rtot),
weightcorRtot  = cor(mweight, rtot),
agecorRtot  = cor(mage, rtot),
SSBcorRdev  = cor(SSBprop, Rresid),
weightcorRdev  = cor(mweight, Rresid),
agecorRdev  = cor(mage, Rresid)) %>%
pivot_longer(8:16)
lims <- max(abs(prop.plot$value))
p1 <-  ggplot(prop.plot, aes(x = model, y = value, fill = model))+geom_violin()+geom_boxplot(width = 0.1)+
facet_grid(factor(rho)~name)+scale_x_discrete()+
theme_bw()+theme(axis.text.x = element_blank())+coord_cartesian(ylim = c(-lims,lims))+geom_hline(aes(yintercept = 0), linetype = 2)
p1
ggsave('figures/rho_violin.png', p1, width = 16, height = 16)
# Plot some stock recruitment
idx <- c(1, 15, 25, 30, 50)
# Time series
p2 <- ggplot(df.save[df.save$run %in% idx,], aes(x = years, y = R, color = factor(run)))+
geom_line()+theme_classic()+facet_grid(rho~model)
p2
p3 <- ggplot(df.save[df.save$run %in% idx,], aes(x = years, y = SSB, color = factor(run)))+
geom_line()+theme_classic()+facet_grid(rho~model)
p3
p2 <- ggplot(df.save[df.save$run %in% idx,], aes(x = years, y = Rtot, color = factor(run)))+
geom_line()+theme_classic()+facet_grid(rho~model)
p2
p2 <- ggplot(df.save[df.save$run %in% idx,], aes(x = SSB, y = R, color = factor(run)))+
geom_point()+theme_classic()+facet_grid(rho~model)
p2
# Use the scam fit for a range of models #
### Run bulk sims ###
require('scam')
require('tidyverse')
require('patchwork')
source('R/fn_sims.R')
source('R/calcSSB0.R')
source('R/run_agebased_model_true_Catch.R')
source('R/load_data_seasons.R')
source('R/est_eggs.R')
source('R/plotRecruitment.R')
source('R/getEquilibrium.R')
source('R/runScenarios.R')
eggs <- read.csv('data/fecundityEggSizeFemaleSize.csv')
eggs$weight <- 0.01*(eggs$FemaleSize_mm/10)^3 # Fix this later
# All eggs as a function of size
eggs <- eggs %>% group_by(Species) %>%
mutate(relweight = weight/max(weight),
releggs = Fecundity_nOfEggs_per_female/max(Fecundity_nOfEggs_per_female)
)
x <- eggs[is.na(eggs$relweight) == 0,]$relweight
y <- eggs[is.na(eggs$relweight) == 0,]$releggs
# all relative eggs
#parms <- est_eggs(x,y)
# Just take the cod eggs most of the other fish are not really big fisheries
cod <- eggs[eggs$Species == 'Gadus morhua',]
cod$weight <- 0.01*(cod$FemaleSize_mm/10)^3 # Fix the parameters for weight lenght to whatever here
codest <- est_eggs(x = cod$weight,
y = cod$Fecundity_nOfEggs_per_female)
# Life history
Linf <- 50
K <-  0.4
SDR <- 0.2
rho <- c(.01,.1, .5, .7, .99) # Try five different auto correlation coefficients
maxage <- 10
tau <- 3
M0 <- .4
tau_sel <- 2
egg.scale <- 1e5
R0 = 1000
recruitment = 'BH_R'
nspecies <- 1
F0 <- seq(0.1,1, length.out = 5)
# Calculate Fmsy as a function of LH parameters
Fmsy <- seq(0,2, length.out = 50)
Catch <- data.frame(
F0 = rep(Fmsy, nspecies),
species = rep(Linf, each = length(Fmsy)*nspecies),
Catch = NA
)
for(i in 1:nspecies){
for(j in 1:length(Fmsy)){
df <- load_data_seasons(nseason = 1,
nyear = 100,# Set up parameters
Linf = Linf[i],
maxage = maxage[i],
tau = tau[i],
K = K[i],
t0 = 0,
tau_sel = tau_sel[i],
M= M0[i],
SDR = 0, # Recruitment deviations - set to zero to calculate lambda
fishing.type = 'constant',
mortality = 'constant',
recruitment = recruitment,
negg = codest$parameters[['alpha.lin']]/egg.scale[i],
eggbeta = codest$parameters[['beta.lin']],
F0 = Fmsy[j], # Set to zero to calc lambda
R0 = R0) # Specify parameters
tmp <- run.agebased.true.catch(df)
Catch[Catch$species == Linf[i] & Catch$F0 == Fmsy[j],]$Catch <- tmp$Catch[df$tEnd]
}
}
ggplot(Catch, aes(x = F0, y = Catch, color = as.factor(species)))+geom_line()+theme_classic()+
facet_wrap(~species, scales = 'free_y')+theme(legend.position = 'none')
F0 <- 0.2
for(i in 1:length(rho)){
df.in <- fn_sims(tau = tau,
Linf = Linf,
maxage = maxage,
K = K,
t0 = 0,
SDR = SDR,
F0 = F0,
M = M0,
tau_sel = tau_sel,
egg.scale = egg.scale,
R0 = R0,
rho = rho[i],
recruitment = 'BH_R',
lambda.slope = .7,
mortality = 'constant',
fishing.type = 'AR',
recruitment.type = 'AR'
)
if(i == 1){
df.out <- df.in[[1]]
df.N <- df.in[[3]]
df.save <- df.in[[2]]
}else{
df.out <- rbind(df.out, df.in[[1]])
df.N <- rbind(df.N, df.in[[3]])
df.save <- rbind(df.save, df.in[[2]])
}
}
# remove the ones with zero recruitment
df.plot <- df.out[df.out$rec>1,]
p1 <- ggplot(df.plot[df.plot$years > 50 ,], aes(x = mweight, y = SSBprop, color = model))+geom_point()+
facet_wrap(~rho, scales = 'free')+theme_bw()
p2 <- ggplot(df.plot[df.plot$years > 50 ,], aes(x = SSBprop, y = Rdev, color = model))+geom_point()+
facet_wrap(~rho, scales = 'free')+theme_bw()+geom_smooth(method = 'lm')
p3 <- ggplot(df.plot[df.plot$years > 50 ,], aes(x = SSBprop, y = recR0, color = model))+geom_point()+
facet_wrap(~rho, scales = 'free')+theme_bw()+geom_smooth(method = 'lm')
p1/p2/p3
prop.plot <- df.plot %>% group_by(model, run, Linf, SDR, K, tau, rho) %>% summarise(SSBcorRR0  = cor(SSBprop, recR0),
weightcorRR0  = cor(mweight, recR0),
agecorRR0  = cor(mage, recR0),
SSBcorRtot  = cor(SSBprop, rtot),
weightcorRtot  = cor(mweight, rtot),
agecorRtot  = cor(mage, rtot),
SSBcorRdev  = cor(SSBprop, Rresid),
weightcorRdev  = cor(mweight, Rresid),
agecorRdev  = cor(mage, Rresid)) %>%
pivot_longer(8:16)
lims <- max(abs(prop.plot$value))
p1 <-  ggplot(prop.plot, aes(x = model, y = value, fill = model))+geom_violin()+geom_boxplot(width = 0.1)+
facet_grid(factor(rho)~name)+scale_x_discrete()+
theme_bw()+theme(axis.text.x = element_blank())+coord_cartesian(ylim = c(-lims,lims))+geom_hline(aes(yintercept = 0), linetype = 2)
p1
ggsave('figures/rho_violin.png', p1, width = 16, height = 16)
# Plot some stock recruitment
idx <- c(1, 15, 25, 30, 50)
# Time series
p2 <- ggplot(df.save[df.save$run %in% idx,], aes(x = years, y = R, color = factor(run)))+
geom_line()+theme_classic()+facet_grid(rho~model)
p2
p3 <- ggplot(df.save[df.save$run %in% idx,], aes(x = years, y = SSB, color = factor(run)))+
geom_line()+theme_classic()+facet_grid(rho~model)
p3
p2 <- ggplot(df.save[df.save$run %in% idx,], aes(x = years, y = Rtot, color = factor(run)))+
geom_line()+theme_classic()+facet_grid(rho~model)
p2
p2 <- ggplot(df.save[df.save$run %in% idx,], aes(x = SSB, y = R, color = factor(run)))+
geom_point()+theme_classic()+facet_grid(rho~model)
p2
# Use the scam fit for a range of models #
### Run bulk sims ###
require('scam')
require('tidyverse')
require('patchwork')
source('R/fn_sims.R')
source('R/calcSSB0.R')
setwd("~/GitHub/BOFFsims/R")
setwd("~/GitHub/BOFFsims/")
### Run bulk sims ###
require('scam')
require('tidyverse')
require('patchwork')
source('R/fn_sims.R')
source('R/calcSSB0.R')
source('R/run_agebased_model_true_Catch.R')
source('R/load_data_seasons.R')
source('R/est_eggs.R')
source('R/plotRecruitment.R')
source('R/getEquilibrium.R')
source('R/runScenarios.R')
eggs <- read.csv('data/fecundityEggSizeFemaleSize.csv')
eggs$weight <- 0.01*(eggs$FemaleSize_mm/10)^3 # Fix this later
# All eggs as a function of size
eggs <- eggs %>% group_by(Species) %>%
mutate(relweight = weight/max(weight),
releggs = Fecundity_nOfEggs_per_female/max(Fecundity_nOfEggs_per_female)
)
x <- eggs[is.na(eggs$relweight) == 0,]$relweight
y <- eggs[is.na(eggs$relweight) == 0,]$releggs
# all relative eggs
#parms <- est_eggs(x,y)
# Just take the cod eggs most of the other fish are not really big fisheries
cod <- eggs[eggs$Species == 'Gadus morhua',]
cod$weight <- 0.01*(cod$FemaleSize_mm/10)^3 # Fix the parameters for weight lenght to whatever here
codest <- est_eggs(x = cod$weight,
y = cod$Fecundity_nOfEggs_per_female)
# Life history
Linf <- 50
K <-  0.4
SDR <- 0.2
rho <- c(.01,.1, .5, .7, .99) # Try five different auto correlation coefficients
maxage <- 10
tau <- 3
M0 <- .4
tau_sel <- 2
egg.scale <- 1e5
R0 = 1000
recruitment = 'BH_R'
nspecies <- 1
F0 <- seq(0.1,1, length.out = 5)
# Calculate Fmsy as a function of LH parameters
Fmsy <- seq(0,2, length.out = 50)
Catch <- data.frame(
F0 = rep(Fmsy, nspecies),
species = rep(Linf, each = length(Fmsy)*nspecies),
Catch = NA
)
for(i in 1:nspecies){
for(j in 1:length(Fmsy)){
df <- load_data_seasons(nseason = 1,
nyear = 100,# Set up parameters
Linf = Linf[i],
maxage = maxage[i],
tau = tau[i],
K = K[i],
t0 = 0,
tau_sel = tau_sel[i],
M= M0[i],
SDR = 0, # Recruitment deviations - set to zero to calculate lambda
fishing.type = 'constant',
mortality = 'constant',
recruitment = recruitment,
negg = codest$parameters[['alpha.lin']]/egg.scale[i],
eggbeta = codest$parameters[['beta.lin']],
F0 = Fmsy[j], # Set to zero to calc lambda
R0 = R0) # Specify parameters
tmp <- run.agebased.true.catch(df)
Catch[Catch$species == Linf[i] & Catch$F0 == Fmsy[j],]$Catch <- tmp$Catch[df$tEnd]
}
}
ggplot(Catch, aes(x = F0, y = Catch, color = as.factor(species)))+geom_line()+theme_classic()+
facet_wrap(~species, scales = 'free_y')+theme(legend.position = 'none')
F0 <- 0.2
for(i in 1:length(rho)){
df.in <- fn_sims(tau = tau,
Linf = Linf,
maxage = maxage,
K = K,
t0 = 0,
SDR = SDR,
F0 = F0,
M = M0,
tau_sel = tau_sel,
egg.scale = egg.scale,
R0 = R0,
rho = rho[i],
recruitment = 'BH_R',
lambda.slope = .7,
mortality = 'constant',
fishing.type = 'AR',
recruitment.type = 'AR'
)
if(i == 1){
df.out <- df.in[[1]]
df.N <- df.in[[3]]
df.save <- df.in[[2]]
}else{
df.out <- rbind(df.out, df.in[[1]])
df.N <- rbind(df.N, df.in[[3]])
df.save <- rbind(df.save, df.in[[2]])
}
}
# remove the ones with zero recruitment
df.plot <- df.out[df.out$rec>1,]
p1 <- ggplot(df.plot[df.plot$years > 50 ,], aes(x = mweight, y = SSBprop, color = model))+geom_point()+
facet_wrap(~rho, scales = 'free')+theme_bw()
p2 <- ggplot(df.plot[df.plot$years > 50 ,], aes(x = SSBprop, y = Rdev, color = model))+geom_point()+
facet_wrap(~rho, scales = 'free')+theme_bw()+geom_smooth(method = 'lm')
p3 <- ggplot(df.plot[df.plot$years > 50 ,], aes(x = SSBprop, y = recR0, color = model))+geom_point()+
facet_wrap(~rho, scales = 'free')+theme_bw()+geom_smooth(method = 'lm')
p1/p2/p3
prop.plot <- df.plot %>% group_by(model, run, Linf, SDR, K, tau, rho) %>% summarise(SSBcorRR0  = cor(SSBprop, recR0),
weightcorRR0  = cor(mweight, recR0),
agecorRR0  = cor(mage, recR0),
SSBcorRtot  = cor(SSBprop, rtot),
weightcorRtot  = cor(mweight, rtot),
agecorRtot  = cor(mage, rtot),
SSBcorRdev  = cor(SSBprop, Rresid),
weightcorRdev  = cor(mweight, Rresid),
agecorRdev  = cor(mage, Rresid)) %>%
pivot_longer(8:16)
lims <- max(abs(prop.plot$value))
p1 <-  ggplot(prop.plot, aes(x = model, y = value, fill = model))+geom_violin()+geom_boxplot(width = 0.1)+
facet_grid(factor(rho)~name)+scale_x_discrete()+
theme_bw()+theme(axis.text.x = element_blank())+coord_cartesian(ylim = c(-lims,lims))+geom_hline(aes(yintercept = 0), linetype = 2)
p1
ggsave('figures/rho_violin.png', p1, width = 16, height = 16)
# Plot some stock recruitment
idx <- c(1, 15, 25, 30, 50)
# Time series
p2 <- ggplot(df.save[df.save$run %in% idx,], aes(x = years, y = R, color = factor(run)))+
geom_line()+theme_classic()+facet_grid(rho~model)
p2
p3 <- ggplot(df.save[df.save$run %in% idx,], aes(x = years, y = SSB, color = factor(run)))+
geom_line()+theme_classic()+facet_grid(rho~model)
p3
p2 <- ggplot(df.save[df.save$run %in% idx,], aes(x = years, y = Rtot, color = factor(run)))+
geom_line()+theme_classic()+facet_grid(rho~model)
p2
p2 <- ggplot(df.save[df.save$run %in% idx,], aes(x = SSB, y = R, color = factor(run)))+
geom_point()+theme_classic()+facet_grid(rho~model)
p2
# Use the scam fit for a range of models #
p2
head(df.save)
