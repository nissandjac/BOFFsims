R = NA,
Rtot = NA,
Catch = NA,
run = rep(1:nruns, each = length(df$years)),
model = model)
df$logSDR
head(df.sum)
ggplot(df.sum[df.sum$years > 30,], aes(x = years, y = S, color = model))+geom_line()+
facet_wrap(~F0, scales = 'free_y')+theme_bw()+
geom_ribbon(aes(ymin = Smin, ymax = Smax, fill = model), alpha = 0.1)
ggplot(df.sum[df.sum$years > 30,], aes(x = years, y = S, color = model))+geom_line()+
facet_wrap(~F0, scales = 'free_y')+theme_bw()+
geom_ribbon(aes(ymin = Smin, ymax = Smax, fill = model), alpha = 0.1, linetype = 0)
ggplot(df.sum[df.sum$years > 30,], aes(x = years, y = C, color = model))+geom_line()+
facet_wrap(~F0, scales = 'free_y')+theme_bw()+
geom_ribbon(aes(ymin = Cmin, ymax = Cmax, fill = model), alpha = 0.1, linetype = 0)
source('~/Github/BOFFsims/R/Iteratesims_SDR.R')
nruns <- 100
for(i in 1:nruns){
set.seed(seeds[i])
df <- load_data_seasons(nseason = 1,
nyear = 100,# Set up parameters
Linf = Linf,
maxage = maxage,
K = K,
t0 = t0,
SDR = SDR, # Recruitment deviations
fishing.type = 'constant',
mortality = 'constant',
alpha = alpha,
beta = beta,
recruitment = recruitment,
recruitment.type = 'AR',
negg = codest$parameters[['alpha.lin']],
eggbeta = codest$parameters[['beta.lin']],
F0 = F0,
R0 = R0) # Specify parameters
tmprun <- run.agebased.true.catch(df)
# Iterate over fishing mortalities
ls.lin <- Iteratesims_SDR(df, SDR = round(seq(0,1, length.out = 20), digits = 2)) # Run over 30 fishing mortalities
if(i == 1){
df.out <- ls.lin[[1]]
df.out$run <- paste('run', i, sep = '-')
}else{
tmp <- ls.lin[[1]]
tmp$run <- paste('run', i, sep = '-')
df.out <- rbind(df.out,tmp)
}
}
nruns <- 100
i
set.seed(seeds[i])
df <- load_data_seasons(nseason = 1,
nyear = 100,# Set up parameters
Linf = Linf,
maxage = maxage,
K = K,
t0 = t0,
SDR = SDR, # Recruitment deviations
fishing.type = 'constant',
mortality = 'constant',
alpha = alpha,
beta = beta,
recruitment = recruitment,
recruitment.type = 'AR',
negg = codest$parameters[['alpha.lin']],
eggbeta = codest$parameters[['beta.lin']],
F0 = F0,
R0 = R0) # Specify parameters
tmprun <- run.agebased.true.catch(df)
round(seq(0,1, length.out = 20), digits = 2)
# Iterate over fishing mortalities
ls.lin <- Iteratesims_SDR(df, SDR = round(seq(0,1, length.out = 20), digits = 2)) # Run over 30 fishing mortalities
SDR = round(seq(0,1, length.out = 20), digits = 2)
nruns <- length(SDR)
df.save <- data.frame(years = rep(df$years, nruns),
SDR = rep(Fin, each =length(df$years)),
SSB = NA,
R = NA,
Rtot = NA,
Catch = NA,
run = rep(1:nruns, each = length(df$years)),
model = model)
for(i in 1:length(dchange)){
df$SDR<- log(SDR[i])
tmprun <- run.agebased.true.catch(df, seed = seeds[i])
df.save[df.save$run == i,]$SSB <- tmprun$SSB
df.save[df.save$run == i,]$R <- tmprun$R.save
df.save[df.save$run == i,]$Rtot <- tmprun$Rtot.save
df.save[df.save$run == i,]$Catch <- tmprun$Catch
}
i
df$SDR<- log(SDR[i])
source('~/Github/BOFFsims/R/Iteratesims_SDR.R')
set.seed(seeds[i])
df <- load_data_seasons(nseason = 1,
nyear = 100,# Set up parameters
Linf = Linf,
maxage = maxage,
K = K,
t0 = t0,
SDR = SDR, # Recruitment deviations
fishing.type = 'constant',
mortality = 'constant',
alpha = alpha,
beta = beta,
recruitment = recruitment,
recruitment.type = 'AR',
negg = codest$parameters[['alpha.lin']],
eggbeta = codest$parameters[['beta.lin']],
F0 = F0,
R0 = R0) # Specify parameters
tmprun <- run.agebased.true.catch(df)
# Iterate over fishing mortalities
ls.lin <- Iteratesims_SDR(df, SDR = round(seq(0,1, length.out = 20), digits = 2)) # Run over 30 fishing mortalities
set.seed(seeds[i])
df <- load_data_seasons(nseason = 1,
nyear = 100,# Set up parameters
Linf = Linf,
maxage = maxage,
K = K,
t0 = t0,
SDR = SDR, # Recruitment deviations
fishing.type = 'constant',
mortality = 'constant',
alpha = alpha,
beta = beta,
recruitment = recruitment,
recruitment.type = 'AR',
negg = codest$parameters[['alpha.lin']],
eggbeta = codest$parameters[['beta.lin']],
F0 = F0,
R0 = R0) # Specify parameters
tmprun <- run.agebased.true.catch(df)
df$logSDR
exp(df$logSDR)
exp(-Inf)
df <- load_data_seasons(nseason = 1,
nyear = 200,# Set up parameters
Linf = 150,
maxage = 10,
h = 0.4,
K = .6,
t0 = 0,
SDR = .0, # Recruitment deviations
fishing.type = 'constant',
mortality = 'constant',
alpha = alpha,
beta = beta,
recruitment = 'BH_R',
recruitment.type = 'AR',
rhoR = .75, # Determines the amount of autocorrelation
negg = codest$parameters[['alpha.lin']],
eggbeta = codest$parameters[['beta.lin']],
F0 = 0.5,
R0 = 1000) # Specify parameters
tmp <- run.agebased.true.catch(df)
tmp$SSB
nruns <- length(SDR)
df.save <- data.frame(years = rep(df$years, nruns),
SDR = rep(SDR, each =length(df$years)),
SSB = NA,
R = NA,
Rtot = NA,
Catch = NA,
run = rep(1:nruns, each = length(df$years)),
model = model)
source('~/Github/BOFFsims/R/Iteratesims_SDR.R')
df$logSDR
df <- load_data_seasons(nseason = 1,
nyear = 200,# Set up parameters
Linf = 150,
maxage = 10,
h = 0.4,
K = .6,
t0 = 0,
SDR = .0, # Recruitment deviations
fishing.type = 'constant',
mortality = 'constant',
alpha = alpha,
beta = beta,
recruitment = 'BH_R',
recruitment.type = 'AR',
rhoR = .75, # Determines the amount of autocorrelation
negg = codest$parameters[['alpha.lin']],
eggbeta = codest$parameters[['beta.lin']],
F0 = 0.5,
R0 = 1000) # Specify parameters
df$logSDR
df$logSDR<- log(SDR[i])
tmprun <- run.agebased.true.catch(df, seed = seeds[i])
df <- load_data_seasons(nseason = 1,
nyear = 100,# Set up parameters
Linf = Linf,
maxage = maxage,
K = K,
t0 = t0,
SDR = SDR, # Recruitment deviations
fishing.type = 'constant',
mortality = 'constant',
alpha = alpha,
beta = beta,
recruitment = recruitment,
recruitment.type = 'AR',
negg = codest$parameters[['alpha.lin']],
eggbeta = codest$parameters[['beta.lin']],
F0 = F0,
R0 = R0) # Specify parameters
tmprun <- run.agebased.true.catch(df)
SDR
df <- load_data_seasons(nseason = 1,
nyear = 100,# Set up parameters
Linf = Linf,
maxage = maxage,
K = K,
t0 = t0,
SDR = SDR, # Recruitment deviations
fishing.type = 'constant',
mortality = 'constant',
alpha = alpha,
beta = beta,
recruitment = recruitment,
recruitment.type = 'AR',
negg = codest$parameters[['alpha.lin']],
eggbeta = codest$parameters[['beta.lin']],
F0 = F0,
R0 = R0) # Specify parameters
source('~/Github/BOFFsims/R/Iteratesims_SDR.R')
SDR <- 0
SDRin = round(seq(0,1, length.out = 20), digits = 2))
SDRin = round(seq(0,1, length.out = 20), digits = 2)
SDRin
nruns <- length(SDR)
df.save <- data.frame(years = rep(df$years, nruns),
SDR = rep(SDR, each =length(df$years)),
SSB = NA,
R = NA,
Rtot = NA,
Catch = NA,
run = rep(1:nruns, each = length(df$years)),
model = model)
df$logSDR<- log(SDR[i])
tmprun <- run.agebased.true.catch(df, seed = seeds[i])
df$logSDR
source('~/Github/BOFFsims/R/Iteratesims_SDR.R')
df$logSDR<- log(SDRin[i])
tmprun <- run.agebased.true.catch(df, seed = seeds[i])
df$logSDcatch
df$logSDR
i
source('~/Github/BOFFsims/R/Iteratesims_SDR.R')
i <-
1
nruns <- length(SDR)
df.save <- data.frame(years = rep(df$years, nruns),
SDR = rep(SDR, each =length(df$years)),
SSB = NA,
R = NA,
Rtot = NA,
Catch = NA,
run = rep(1:nruns, each = length(df$years)),
model = model)
for(i in 1:length(SDRin)){
df$logSDR<- log(SDRin[i])
tmprun <- run.agebased.true.catch(df, seed = seeds[i])
df.save[df.save$run == i,]$SSB <- tmprun$SSB
df.save[df.save$run == i,]$R <- tmprun$R.save
df.save[df.save$run == i,]$Rtot <- tmprun$Rtot.save
df.save[df.save$run == i,]$Catch <- tmprun$Catch
}
i
df$logSDR<- log(SDRin[i])
df$logSDR
exp(df$logSDR)
tmprun <- run.agebased.true.catch(df, seed = seeds[i])
tmprun$SSB
df.save[df.save$run == i,]$SSB
source('~/Github/BOFFsims/R/Iteratesims_SDR.R')
nruns <- length(SDRin)
df.save <- data.frame(years = rep(df$years, nruns),
SDR = rep(SDR, each =length(df$years)),
SSB = NA,
R = NA,
Rtot = NA,
Catch = NA,
run = rep(1:nruns, each = length(df$years)),
model = model)
for(i in 1:length(SDRin)){
df$logSDR<- log(SDRin[i])
tmprun <- run.agebased.true.catch(df, seed = seeds[i])
df.save[df.save$run == i,]$SSB <- tmprun$SSB
df.save[df.save$run == i,]$R <- tmprun$R.save
df.save[df.save$run == i,]$Rtot <- tmprun$Rtot.save
df.save[df.save$run == i,]$Catch <- tmprun$Catch
}
for(i in 1:nruns){
set.seed(seeds[i])
df <- load_data_seasons(nseason = 1,
nyear = 100,# Set up parameters
Linf = Linf,
maxage = maxage,
K = K,
t0 = t0,
SDR = SDR, # Recruitment deviations
fishing.type = 'constant',
mortality = 'constant',
alpha = alpha,
beta = beta,
recruitment = recruitment,
recruitment.type = 'AR',
negg = codest$parameters[['alpha.hyper']],
eggbeta = codest$parameters[['beta.hyper']],
F0 = F0,
R0 = R0) # Specify parameters
tmprun <- run.agebased.true.catch(df)
# Iterate over fishing mortalities
ls.lin <- Iteratesims_SDR(df,  SDRin =SDRin,
model = 'hyper') # Run over 30 fishing mortalities
if(i == 1){
df.out.hyper <- ls.lin[[1]]
df.out.hyper$run <- paste('run', i, sep = '-')
}else{
tmp <- ls.lin[[1]]
tmp$run <- paste('run', i, sep = '-')
df.out.hyper <- rbind(df.out.hyper,tmp)
}
}
df.tot <- rbind(df.out,df.out.hyper)
SDR
nruns <- 100
SDRin <- round(seq(0,1, length.out = 20), digits = 2)
for(i in 1:nruns){
set.seed(seeds[i])
df <- load_data_seasons(nseason = 1,
nyear = 100,# Set up parameters
Linf = Linf,
maxage = maxage,
K = K,
t0 = t0,
SDR = SDR, # Recruitment deviations
fishing.type = 'constant',
mortality = 'constant',
alpha = alpha,
beta = beta,
recruitment = recruitment,
recruitment.type = 'AR',
negg = codest$parameters[['alpha.lin']],
eggbeta = codest$parameters[['beta.lin']],
F0 = F0,
R0 = R0) # Specify parameters
tmprun <- run.agebased.true.catch(df)
# Iterate over fishing mortalities
ls.lin <- Iteratesims_SDR(df, SDRin = SDRin) # Run over 30 fishing mortalities
if(i == 1){
df.out <- ls.lin[[1]]
df.out$run <- paste('run', i, sep = '-')
}else{
tmp <- ls.lin[[1]]
tmp$run <- paste('run', i, sep = '-')
df.out <- rbind(df.out,tmp)
}
}
for(i in 1:nruns){
set.seed(seeds[i])
df <- load_data_seasons(nseason = 1,
nyear = 100,# Set up parameters
Linf = Linf,
maxage = maxage,
K = K,
t0 = t0,
SDR = SDR, # Recruitment deviations
fishing.type = 'constant',
mortality = 'constant',
alpha = alpha,
beta = beta,
recruitment = recruitment,
recruitment.type = 'AR',
negg = codest$parameters[['alpha.hyper']],
eggbeta = codest$parameters[['beta.hyper']],
F0 = F0,
R0 = R0) # Specify parameters
tmprun <- run.agebased.true.catch(df)
# Iterate over fishing mortalities
ls.lin <- Iteratesims_SDR(df,  SDRin =SDRin,
model = 'hyper') # Run over 30 fishing mortalities
if(i == 1){
df.out.hyper <- ls.lin[[1]]
df.out.hyper$run <- paste('run', i, sep = '-')
}else{
tmp <- ls.lin[[1]]
tmp$run <- paste('run', i, sep = '-')
df.out.hyper <- rbind(df.out.hyper,tmp)
}
}
df.tot <- rbind(df.out,df.out.hyper)
df.sum <- df.tot %>% group_by(years, model,F0) %>%
summarise(S = median(SSB),
Rec = median(R),
C = median(Catch),
Rtot = median(Rtot),
Smin = quantile(SSB, probs = 0.05),
Smax = quantile(SSB, probs = 0.95),
Recmin = quantile(R, probs = 0.05),
Rmax = quantile(R, probs = 0.95),
Cmin = quantile(Catch, probs = 0.05),
Cmax = quantile(SSB, probs = 0.95)
)
head(df.tot)
df.sum <- df.tot %>% group_by(years, model,SDR) %>%
summarise(S = median(SSB),
Rec = median(R),
C = median(Catch),
Rtot = median(Rtot),
Smin = quantile(SSB, probs = 0.05),
Smax = quantile(SSB, probs = 0.95),
Recmin = quantile(R, probs = 0.05),
Rmax = quantile(R, probs = 0.95),
Cmin = quantile(Catch, probs = 0.05),
Cmax = quantile(SSB, probs = 0.95)
)
ggplot(df.sum[df.sum$years > 30,], aes(x = years, y = S, color = model))+geom_line()+
facet_wrap(~SDR, scales = 'free_y')+theme_bw()+
geom_ribbon(aes(ymin = Smin, ymax = Smax, fill = model), alpha = 0.1, linetype = 0)
source('~/Github/BOFFsims/R/Iteratesims_SDR.R')
nruns <- 100
SDRin <- round(seq(0,1, length.out = 20), digits = 2)
for(i in 1:nruns){
set.seed(seeds[i])
df <- load_data_seasons(nseason = 1,
nyear = 100,# Set up parameters
Linf = Linf,
maxage = maxage,
K = K,
t0 = t0,
SDR = SDR, # Recruitment deviations
fishing.type = 'constant',
mortality = 'constant',
alpha = alpha,
beta = beta,
recruitment = recruitment,
recruitment.type = 'AR',
negg = codest$parameters[['alpha.lin']],
eggbeta = codest$parameters[['beta.lin']],
F0 = F0,
R0 = R0) # Specify parameters
tmprun <- run.agebased.true.catch(df)
# Iterate over fishing mortalities
ls.lin <- Iteratesims_SDR(df, SDRin = SDRin) # Run over 30 fishing mortalities
if(i == 1){
df.out <- ls.lin[[1]]
df.out$run <- paste('run', i, sep = '-')
}else{
tmp <- ls.lin[[1]]
tmp$run <- paste('run', i, sep = '-')
df.out <- rbind(df.out,tmp)
}
}
for(i in 1:nruns){
set.seed(seeds[i])
df <- load_data_seasons(nseason = 1,
nyear = 100,# Set up parameters
Linf = Linf,
maxage = maxage,
K = K,
t0 = t0,
SDR = SDR, # Recruitment deviations
fishing.type = 'constant',
mortality = 'constant',
alpha = alpha,
beta = beta,
recruitment = recruitment,
recruitment.type = 'AR',
negg = codest$parameters[['alpha.hyper']],
eggbeta = codest$parameters[['beta.hyper']],
F0 = F0,
R0 = R0) # Specify parameters
tmprun <- run.agebased.true.catch(df)
# Iterate over fishing mortalities
ls.lin <- Iteratesims_SDR(df,  SDRin =SDRin,
model = 'hyper') # Run over 30 fishing mortalities
if(i == 1){
df.out.hyper <- ls.lin[[1]]
df.out.hyper$run <- paste('run', i, sep = '-')
}else{
tmp <- ls.lin[[1]]
tmp$run <- paste('run', i, sep = '-')
df.out.hyper <- rbind(df.out.hyper,tmp)
}
}
df.tot <- rbind(df.out,df.out.hyper)
## Summarize
df.sum <- df.tot %>% group_by(years, model,SDR) %>%
summarise(S = median(SSB),
Rec = median(R),
C = median(Catch),
Rtot = median(Rtot),
Smin = quantile(SSB, probs = 0.05),
Smax = quantile(SSB, probs = 0.95),
Recmin = quantile(R, probs = 0.05),
Rmax = quantile(R, probs = 0.95),
Cmin = quantile(Catch, probs = 0.05),
Cmax = quantile(SSB, probs = 0.95)
)
#
# ggplot(df.sum[df.sum$years > 30,], aes(x = years, y = Rtot, color = model))+geom_line()+
#   facet_wrap(~F0, scales = 'free_y'))
#   theme_bw()
ggplot(df.sum[df.sum$years > 30,], aes(x = years, y = S, color = model))+geom_line()+
facet_wrap(~SDR, scales = 'free_y')+theme_bw()+
geom_ribbon(aes(ymin = Smin, ymax = Smax, fill = model), alpha = 0.1, linetype = 0)
head(df.sum)
unique(df.sum$model)
