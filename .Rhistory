h = 0.5,
K = .5,
t0 = 0,
SDR = 0, # Recruitment deviations
fishing.type = 'constant',
mortality = 'constant',
alpha = alpha,
beta = 1/R0,
R0 = R0,
recruitment = 'BH_steep',
negg = codest$parameters[['alpha.lin']],
eggbeta = codest$parameters[['beta.lin']],
F0 = 0.1) # Specify parameters
tmp <- run.agebased.true.catch(df, seed = seeds[1])
plot(tmp$R.save)
df$egg.size
df <- load_data_seasons(nseason = 1,
nyear = 100,# Set up parameters
Linf = 100,
maxage = 20,
h = 0.5,
K = .5,
t0 = 0,
SDR = 0, # Recruitment deviations
fishing.type = 'constant',
mortality = 'constant',
alpha = alpha,
beta = 1/R0,
R0 = R0,
recruitment = 'BH',
negg = codest$parameters[['alpha.lin']],
eggbeta = codest$parameters[['beta.lin']],
F0 = 0.1) # Specify parameters
tmp <- run.agebased.true.catch(df, seed = seeds[1])
plot(tmp$R.save)
df <- load_data_seasons(nseason = 1,
nyear = 100,# Set up parameters
Linf = 100,
maxage = 20,
h = 0.5,
K = .5,
t0 = 0,
SDR = 0, # Recruitment deviations
fishing.type = 'constant',
mortality = 'constant',
alpha = alpha,
beta = 1/R0,
R0 = R0,
recruitment = 'BH',
negg = codest$parameters[['alpha.lin']],
eggbeta = codest$parameters[['beta.lin']],
F0 = 0) # Specify parameters
tmp <- run.agebased.true.catch(df, seed = seeds[1])
plot(tmp$R.save)
df <- load_data_seasons(nseason = 1,
nyear = 100,# Set up parameters
Linf = 100,
maxage = 20,
h = 0.5,
K = .5,
t0 = 0,
SDR = 0, # Recruitment deviations
fishing.type = 'constant',
mortality = 'constant',
alpha = alpha,
beta = 1/R0,
R0 = R0,
recruitment = 'BH',
negg = codest$parameters[['alpha.lin']],
eggbeta = codest$parameters[['beta.lin']],
F0 = 0.5) # Specify parameters
tmp <- run.agebased.true.catch(df, seed = seeds[1])
plot(tmp$R.save)
source('~/Github/BOFFsims/R/run_agebased_model_true_Catch.R')
source('~/Github/BOFFsims/R/run_agebased_model_true_Catch.R')
N.save.age[,yr,space,1]*as.numeric(w_ssb)*df$Matsel)
(N.save.age[,yr,space,1]*as.numeric(w_ssb)*df$Matsel)
plot((N.save.age[,yr,space,1]*as.numeric(w_ssb)*df$Matsel))
plot((N.save.age[,yr,space,1]*as.numeric(w_ssb)*df$Matsel), type = 'l')
plot((N.save.age[,yr,space,1]*as.numeric(w_ssb)*df$Matsel)^1.1, type = 'l')
lines((N.save.age[,yr,space,1]*as.numeric(w_ssb)*df$Matsel), type = 'l')
source('~/Github/BOFFsims/R/run_agebased_model_true_Catch.R')
N.save.age[,yr,space,1]*Mat.sel*df$egg.size
plot(N.save.age[,yr,space,1]*Mat.sel*df$egg.size)
plot(N.save.age[,yr,space,1]*Mat.sel*df$egg.size, type = 'l')
xx <- N.save.age[,yr,space,1]*as.numeric(w_ssb)*df$Matsel
xx
lines(xx)
h
source('~/Github/BOFFsims/R/load_data_seasons.R')
df <- load_data_seasons(nseason = 1,
nyear = 100,# Set up parameters
Linf = 100,
maxage = 20,
h = 0.5,
K = .5,
t0 = 0,
SDR = 0, # Recruitment deviations
fishing.type = 'constant',
mortality = 'constant',
alpha = alpha,
beta = 1/R0,
R0 = R0,
recruitment = 'Ricker',
negg = codest$parameters[['alpha.lin']],
eggbeta = codest$parameters[['beta.lin']],
F0 = 0.5) # Specify parameters
tmp <- run.agebased.true.catch(df, seed = seeds[1])
plot(tmp$R.save)
plot(tmp$R.save,  log = 'y')
plot(tmp$R.save,  log = 'y', type= 'l')
rep(log(df$alpha)/df$beta)
df <- load_data_seasons(nseason = 1,
nyear = 100,# Set up parameters
Linf = 100,
maxage = 20,
h = 0.5,
K = .5,
t0 = 0,
SDR = 0, # Recruitment deviations
fishing.type = 'constant',
mortality = 'constant',
alpha = alpha,
beta = 1/R0,
R0 = R0,
recruitment = 'Ricker',
negg = codest$parameters[['alpha.lin']],
eggbeta = codest$parameters[['beta.lin']],
F0 = 0) # Specify parameters
tmp <- run.agebased.true.catch(df, seed = seeds[1])
plot(tmp$R.save,  log = 'y', type= 'l')
source('~/Github/BOFFsims/R/run_agebased_model_true_Catch.R')
df <- load_data_seasons(nseason = 1,
nyear = 100,# Set up parameters
Linf = 100,
maxage = 20,
h = 0.5,
K = .5,
t0 = 0,
SDR = 0, # Recruitment deviations
fishing.type = 'constant',
mortality = 'constant',
alpha = alpha,
beta = 1/R0,
R0 = R0,
recruitment = 'Ricker',
negg = codest$parameters[['alpha.lin']],
eggbeta = codest$parameters[['beta.lin']],
F0 = 0) # Specify parameters
df$beta
1/df$beta
df$alpha
df <- load_data_seasons(nseason = 1,
nyear = 100,# Set up parameters
Linf = 100,
maxage = 20,
h = 0.5,
K = .5,
t0 = 0,
SDR = 0, # Recruitment deviations
fishing.type = 'constant',
mortality = 'constant',
alpha = alpha,
beta = 1/R0,
recruitment = 'Ricker',
negg = codest$parameters[['alpha.lin']],
eggbeta = codest$parameters[['beta.lin']],
F0 = 0) # Specify parameters
exp(df$parms$logRinit)
tmp <- run.agebased.true.catch(df, seed = seeds[1])
plot(tmp$R.save,  log = 'y', type= 'l')
rep(log(df$alpha)/df$beta)
df$beta
set.seed(seed)
nseason <- df$nseason
df$tEnd <- length(df$years)*nseason
nyear <-df$tEnd/df$nseason #
year <- df$years
tEnd <- nyear*nseason
# True values
F0 <- df$F0
# Set up the data spatially
nspace <- df$nspace
recruitmat <- df$recruitmat
if(df$move == FALSE){
recruitmat <- 1
}
movemat <- df$movemat
move.init <- df$move.init
# M selectivity
Msel <- df$Msel # no difference between males and females
M0 <- df$M0
M <- t(replicate(Msel, n = nyear))
M <- M[1:nyear,]*M0
SDR <- exp(df$logSDR)
b <- rep(1, nyear)
# Survey selectivity
#surv.sel <- getSelec(df$age,df$parms$psel_surv, df$Smin_survey, df$Smax_survey) # Constant over time
surv.sel <- df$sel # Same as fishing selectivity
# Catchability
q <- exp(df$logq) # Constant over time
surv.sd <- exp(df$parms$logSDsurv) # Survey error
# Maturity
Mat.sel <- df$Matsel # Fecundity
h <- exp(df$parms$logh)
# Age
nage <- df$nage
age <- df$age
R0 <- exp(df$parms$logRinit)
Mage <- cumsum(M[1,])#c(0,cumsum(M[1,1:(nage-1)]))
# Calculate N0 based on R0
mage <- nage # Max age
agetmp <- 0:(mage)
nagetmp <- mage*1# SS multiplies this by 3
Mtmp <- rep(NA, nagetmp)
N0 <- rep(NA,nagetmp)
N0[1] <- R0
N0[2:(nagetmp-1)] = R0*exp(-Mage[1:(nagetmp-2)])
N0[nagetmp] =  R0*exp(-Mage[nagetmp-1])/(1-exp(-M[1,nage]))
# Mtmp[1:nage] <- cumsum(M[1,])
# Mtmp[nage+1:nagetmp] <- cumsum(M[1,])[nage]
#
# N0tmp <- rep(NA,nagetmp)
#
# N0tmp[1] <- R0
# N0tmp[2:(nagetmp-1)] = R0*exp(-M[2:(nagetmp-1)]*age[2:(nagetmp-1)])
# N0tmp[nagetmp] =  R0*exp(-M[nagetmp-1]*age[nagetmp-1])/(1-exp(-M[1,nage]))
#
# N0 <- matrix(NA,nage)
# N0[1:(nage-1)] <- N0tmp[1:(nage-1)]
# N0[nage] <- sum(N0tmp[nage:nagetmp])
#
SSB_0 <- NA
for(i in 1:nspace){
#SSB_0[i] <- sum(df$Matsel*N0*move.init[i])
SSB_0[i] <- sum(N0*df$wage_ssb[,1]*df$Matsel)
}
names(SSB_0) <- paste(rep('space',each = df$nspace),1:nspace)
R_0 <- R0#*move.init
# Used the inital recruitment devs to get a start
# Ninit <- rep(NA,nage)
# Ninit_dev <- (df$parms$initN)
# Ninit[1] <- R0
# Ninit[2:(nage-1)] <-R0 * exp(-M[2:(nage-1)]*age[2:(nage-1)])*exp(-0.5*SDR^2*0+Ninit_dev[1:(nage-2)])
# Ninit[nage] <- R0*exp(-(M[nage-1]*age[nage-1]))/(1-exp(-M[nage]))*exp(-0.5*SDR^2*0+Ninit_dev[nage-1])# Plus group (ignore recruitment dev's in first year )
#
# Create containers to save the data
# SSB_init <- NA
#
# for(i in 1:nspace)
#
#Ninit[1] <- sum((4*h*R_0*SSB_init/(SSB_0*(1-h)+ SSB_init*(5*h-1)))*exp(-0.5*1*SDR^2+df$parms$Rin[1]), na.rm = T)
year_1 <- c(year,max(year)+1)
SSB <- matrix(NA,nyear, nspace,
dimnames = list(year = df$years,
space = 1:nspace))
SSB.all <- array(NA, dim = c(nyear, nspace,nseason),
dimnames = list(year = year, space = 1:nspace, season = 1:nseason))
SSB.weight <- matrix(NA,nyear, nspace,
dimnames = list(year = year, space = 1:nspace))
SSB.eq <- matrix(NA, nyear, nspace)
Biomass.save <- matrix(NA,nyear, nspace,
dimnames= list(year = year, space = 1:nspace))
Catch <- matrix(NA,nyear, dimnames = list(year = year))
Catch.age <- matrix(NA,nage,nyear, dimnames = list(age = age, year = year))
CatchN <- matrix(NA,nyear, dimnames = list(year = year))
CatchN.age <- matrix(NA,nage,nyear, dimnames = list(age =age, year = year))
R.save <- matrix(NA,nyear, nspace, dimnames = list(year = year, space = 1:nspace))
Rtot.save <- matrix(NA,nyear, nspace, dimnames = list(year = year, space = 1:nspace))
Fsel.save <- array(NA,dim = c(nage,nyear,nspace), dimnames = list(age = age, year = year, space = 1:nspace))
Fseason.save <- array(NA,dim = c(nage, nyear, nspace,nseason), dimnames = list(age = age, year = year, space = 1:nspace,
season = 1:nseason))
Fout.save <- array(NA, dim = c(nyear,nseason,nspace),
dimnames = list(year = year, season = 1:nseason, space = 1:nspace))
N.save.age <- array(NA,dim = c(nage,nyear+1, nspace, nseason),
dimnames = list(age = age, year = year_1, space = 1:nspace, season = 1:nseason))
N.save.age.mid <- array(NA,dim = c(nage,nyear+1, nspace, nseason),
dimnames = list(age = age, year = year_1, space = 1:nspace, season = 1:nseason))
R.save <- matrix(NA, nyear, nspace)
V.save <- array(NA,dim = c(nyear, nspace, nseason), dimnames = list(
year = year, space = 1:nspace, season = 1:nseason))
Catch.save.age <- array(NA,dim = c(nage,nyear, nspace, nseason),
dimnames = list(age = age, year = year, space = 1:nspace, season = 1:nseason))
CatchN.save.age <- array(NA,dim = c(nage,nyear, nspace, nseason),
dimnames = list(age = age, year = year, space = 1:nspace, season =1:nseason))
Catch.quota <- array(NA, dim = c(nyear, nspace, nseason),
dimnames = list(year = year, space = 1:nspace, season =1:nseason))
Catch.quota.N <- array(0, dim = c(nyear, nspace, nseason), dimnames = list(year = year, space = 1:nspace,
season = 1:nseason))
survey <- array(NA,dim = c(nyear), dimnames = list(year = year))
survey.true <- array(NA, dim = c(nspace, nyear), dimnames = list(space = 1:nspace, year = year))
surv.tot <- matrix(NA, nyear,nspace, dimnames = list(year = year, space = 1:nspace))
age_comps_surv <- array(NA, dim = c(df$age_maxage,nyear), dimnames = list(age = 1:df$age_maxage,
year = year)) #
age_comps_surv_space <- array(NA, dim = c(df$age_maxage,nyear,nspace), dimnames = list(
age = 1:df$age_maxage, year = year))
N.survey <- matrix(NA,df$age_maxage ,nyear, dimnames = list(age = 1:df$age_maxage,
year= year))
age_comps_catch <- array(NA, dim = c(df$age_maxage,nyear), dimnames = list(age = 1:df$age_maxage,
year = year))
age_comps_catch_space <- array(NA, dim = c(df$age_maxage,nyear,nspace), dimnames = list(
age = 1:df$age_maxage, year = year, space = 1:nspace))
age_comps_OM <- array(NA, dim = c(nage,nyear, nspace,nseason),
dimnames = list(age = age, year= year, space = 1:nspace, season = 1:nseason))
Z.save <- array(NA, dim = c(df$nage, nyear,nspace,nseason), dimnames = list(age= age, year = year, space = 1:nspace,
season = 1:nseason))
Z.save[,1,1,1] <- M[1,]
M.save <- array(NA, dim = c(df$nage, nyear,nspace,nseason), dimnames = list(age= age, year = year, space = 1:nspace,
season = 1:nseason))
M.save[,1,1,1] <- M[1,]
Catch.age[,1] <- 0 # Assumed no fishing before data started
Catch[1]<- 0
CatchN[1] <- 0
CatchN.age[,1] <- 0
survey[1] <- 1 # Surveys start later
for (space in 1:nspace){
survey.true[space,1] <- sum(N.save.age[,1,space,df$surveyseason]*surv.sel*q*df$wage_survey[,1])
}
idx.save <- seq(1,tEnd, by = nseason)
# Distribute over space
Ninit <- rep(NA,nage)
names(Ninit) <- age
Ninit_dev <- (df$parms$initN)
# Fishing before model is run
Fpast <- df$Fpast*df$sel
Fage_past <- cumsum(Fpast)
if(all(is.na(Fage_past))){
Fage_past <- rep(0, nage)
}
Ninit[1] <- R0
Ninit[2:(nage-1)] <-R0 * exp(-(Mage[1:(nage-2)]+Fage_past[1:(nage-2)]))*exp(-0.5*SDR^2*0+Ninit_dev[1:(nage-2)])
Ninit[nage] <- R0*exp(-((Mage[nage-1]+Fage_past[nage-1])))/(1-exp(-(M[1,nage]+Fpast[nage])))*exp(-0.5*SDR^2*0+Ninit_dev[nage-1])# Plus group (ignore recruitment dev's in first year )
#p.save <-matrix(NA,tEnd)
for (space in 1:nspace){
# if (season == 1){
N.save.age[,1,space,1] <- Ninit#*move.init[space] # Just to initialize
N.save.age.mid[,1,space,1] <- N.save.age[,1,space,1]*exp(-0.5*(M[1,]/nseason))
# }else{
#   N.save.age[,1,space,season] <- N.save.age[,1,space,season-1]*exp(-M/nseason)
#   N.save.age.mid[,1,space,season] <- N.save.age[,1,space,season]*exp(-0.5*(M/nseason))
# }
# }
}
#Fspace <- c(0.2612,0.7388) # Contribution of Total catch (add to one)    #Z <- (Fyear+Myear)
Fnseason <- df$Fnseason
if(sum(Fnseason) != 1){
warning('Catch input does not match')
}
pope.mul <- nseason/1*0.5
pope.mul <- 0.50
# Recruitment paramerters
beta <- df$beta
recruitment <- df$recruitment
w_catch <- df$wage_catch[,yr]
w_surv <- df$wage_survey[,yr]
w_mid <- df$wage_mid[,yr]
w_ssb <- df$wage_ssb[,yr]
Ry <- df$parms$Rin[yr]
# Fyear <- F0[yr]*Fsel
Myear <- M0[yr]
if(df$move == FALSE){
Fspace <- 1 # All catches
}
Mseason <- Myear/nseason # M is distributed throughout the year
space <- 1
SSB.weight[yr,space] <- sum(N.save.age[,yr,space,1]*as.numeric(w_ssb)*df$Matsel, na.rm = TRUE)
SSB[yr,space] <- sum(N.save.age[,yr,space,1]*as.numeric(w_ssb)*df$Matsel, na.rm = TRUE)
Biomass.save[yr,space] <- sum(N.save.age[,yr,space,1]*as.numeric(w_mid), na.rm = TRUE)
SSB.all[1,space,1]<- sum(N.save.age[,1,space,1]*Mat.sel, na.rm = TRUE)
# Calculate the unfished spawning biomass given the annual life history params
Mage <- cumsum(Myear)#c(0,cumsum(M[1,1:(nage-1)]))
# Calculate N0 based on R0
# N0.eq <- rep(NA,nagetmp)
#
# N0.eq[1] <- R0
# N0.eq[2:(nagetmp-1)] = R0*exp(-Mage[1:(nagetmp-2)])
# N0.eq[nagetmp] =  R0*exp(-Mage[nagetmp-1])/(1-exp(-Myear[nage]))
# SSB.eq[yr, space] <- sum(N0.eq*as.numeric(w_ssb)*df$Matsel)
#
# Recruitment only in season 1
if(recruitment == 'BH'){
N.save.age[1,yr,space,1] <- 0 # No recruits yet (avoid NA calculation)
# Calculate eggs per individual
Rtot <- sum(N.save.age[,yr,space,1]*Mat.sel*df$egg.size)
# R <- (4*h*R_0[space]*SSB[yr,space]/
#       (SSB_0[space]*(1-h)+ SSB[yr,space]*(5*h-1)))*exp(-0.5*df$b[yr]*SDR^2+Ry)#*recruitmat[space]
# Formulate BH in terms of egg production instead of SSB
R <- (df$alpha*SSB[yr,space])/(1+df$beta*SSB[yr,space])*exp(-0.5*df$b[yr]*SDR^2+Ry)
N.save.age[1,yr,space,1] <- R
R.save[yr,space] <- R
Rtot.save[yr,space] <- Rtot
}
if(recruitment == 'BH_steep'){
N.save.age[1,yr,space,1] <- 0 # No recruits yet (avoid NA calculation)
# Calculate eggs per individual
Rtot <- sum(N.save.age[,yr,space,1]*Mat.sel*df$egg.size)
R <- (4*h*R_0[space]*SSB[yr,space]/
(SSB_0[space]*(1-h)+ SSB[yr,space]*(5*h-1)))*exp(-0.5*df$b[yr]*SDR^2+Ry)#*recruitmat[space]
N.save.age[1,yr,space,1] <- R
R.save[yr,space] <- R
Rtot.save[yr,space] <- Rtot
}
if(recruitment == 'Ricker'){
N.save.age[1,yr,space,1] <- 0 # No recruits yet (avoid NA calculation)
# Calculate eggs per individual
Rtot <- sum(N.save.age[,yr,space,1]*Mat.sel*df$egg.size)
#Rtot <- SSB[yr,space]
R <- alpha*Rtot *exp(-beta * Rtot)*exp(-0.5*df$b[yr]*SDR^2+Ry)#
N.save.age[1,yr,space,1] <- R
R.save[yr,space] <- R
}
yr
N.save.age[1,yr,space,1]
N.save.age[,yr,space,1]*Mat.sel*df$egg.size
plot(N.save.age[,yr,space,1]*Mat.sel*df$egg.size)
plot(N.save.age[,yr,space,1]*Mat.sel*df$egg.size, type ='l')
Mat.sel
df$egg.size
Rtot
Rtot
exp(alpha)
alpha <- 2.6
df <- load_data_seasons(nseason = 1,
nyear = 100,# Set up parameters
Linf = 100,
maxage = 20,
h = 0.5,
K = .5,
t0 = 0,
SDR = 0, # Recruitment deviations
fishing.type = 'constant',
mortality = 'constant',
alpha = alpha,
beta = 1/R0,
recruitment = 'Ricker',
negg = codest$parameters[['alpha.lin']],
eggbeta = codest$parameters[['beta.lin']],
F0 = 0) # Specify parameters
tmp <- run.agebased.true.catch(df, seed = seeds[1])
plot(tmp$R.save,  log = 'y', type= 'l')
alpha <- 2
df <- load_data_seasons(nseason = 1,
nyear = 100,# Set up parameters
Linf = 100,
maxage = 20,
h = 0.5,
K = .5,
t0 = 0,
SDR = 0, # Recruitment deviations
fishing.type = 'constant',
mortality = 'constant',
alpha = alpha,
beta = 1/R0,
recruitment = 'Ricker',
negg = codest$parameters[['alpha.lin']],
eggbeta = codest$parameters[['beta.lin']],
F0 = 0) # Specify parameters
tmp <- run.agebased.true.catch(df, seed = seeds[1])
plot(tmp$R.save,  log = 'y', type= 'l')
lines(rep(log(df$alpha)/df$beta))
alpha <- 1
df <- load_data_seasons(nseason = 1,
nyear = 100,# Set up parameters
Linf = 100,
maxage = 20,
h = 0.5,
K = .5,
t0 = 0,
SDR = 0, # Recruitment deviations
fishing.type = 'constant',
mortality = 'constant',
alpha = alpha,
beta = 1/R0,
recruitment = 'Ricker',
negg = codest$parameters[['alpha.lin']],
eggbeta = codest$parameters[['beta.lin']],
F0 = 0) # Specify parameters
tmp <- run.agebased.true.catch(df, seed = seeds[1])
plot(tmp$R.save,  log = 'y', type= 'l')
alpha <- 1.1
df <- load_data_seasons(nseason = 1,
nyear = 100,# Set up parameters
Linf = 100,
maxage = 20,
h = 0.5,
K = .5,
t0 = 0,
SDR = 0, # Recruitment deviations
fishing.type = 'constant',
mortality = 'constant',
alpha = alpha,
beta = 1/R0,
recruitment = 'Ricker',
negg = codest$parameters[['alpha.lin']],
eggbeta = codest$parameters[['beta.lin']],
F0 = 0) # Specify parameters
tmp <- run.agebased.true.catch(df, seed = seeds[1])
plot(tmp$R.save,  log = 'y', type= 'l')
df <- load_data_seasons(nseason = 1,
nyear = 100,# Set up parameters
Linf = 100,
maxage = 20,
h = 0.5,
K = .5,
t0 = 0,
SDR = 0, # Recruitment deviations
alpha = alpha,
beta = 1/R0,
recruitment = 'Ricker',
negg = codest$parameters[['alpha.lin']],
eggbeta = codest$parameters[['beta.lin']],
F0 = 0) # Specify parameters
