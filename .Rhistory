source('R/load_files_sandeel.R')
# Run sprat from R
source('R/load_files_sandeel.R')
# Run sprat from R
source('R/load_files_sandeel.R')
source('R/mtrx_forward.R')
source('R/getQ.R')
source('R/runSandeelAssessment.R')
source('R/om_to_tmb.R')
# Working directory for sms model
wd = 'data/Sandeel_1r/'
dat <- getSMSdata_sandeel(wd)
sandeel <- dat[['sumdata']]
sandeel.age <- dat[['agedata']]
rec_fac <- exp(as.numeric(read.csv(file.path(wd, 'rec_scale.out'), sep= '')[2]))
pars <- getSMSpar_sandeel(wd, rec_fac, nyear = length(sandeel$Year))
# Output data from SMS to compare model with
# Some basic data to run the model
years <- sandeel$Year
nyear <- length(years)
ages <- 0:4
nseason <- 2 # Number of seasons
beta <- 110000
# Fishing effort
SSBtest <- seq(0, max(sandeel$SSB), length.out = 100)
Rpred <- exp(pars$logalpha)+log(SSBtest)
Rpred[SSBtest>= beta] <- exp(pars$logalpha)+log(beta)
plot(SSBtest, exp(Rpred), type = 'l', ylim = c(0, max(sandeel$Recruits)))
points(sandeel$SSB, sandeel$Recruits)
# Get the effort data
Feffort <- matrix(scan(file.path(wd,'effort.in'), comment.char = '#'),
ncol = 2, nrow = nyear)
# Normalize effort to 1
# Format input data matrices into TMB style
mtrx <- sumtable_to_matrix(sandeel.age)
Surveyobs <- survey_to_matrix(dat[['survey']], years,quarter = 1:2)
Catchobs <- canum_to_matrix(dat[['canum']],quarter = 1:2)
nsurvey <- dim(Surveyobs)[4]
SDR_catch <-  t(sqrt(matrix(c(0,1.659,
0.348,   0.587,
0.348 ,  0.587,
0.661  , 1.019,
0.661   ,1.019), nrow = 2, ncol = 5)))
Surveyobs[5,,1,1] <- -1
nocatch <- read.table('data/Sandeel_1r/zero_catch_year_season.in', comment = '#', skip = 3)
#Feffort[which(df.tmb$years == 2013),2] <- 0 # This is different two places in the input files
df.tmb <- get_TMB_parameters(
mtrx = mtrx, # List that contains M, mat, west, weca
Surveyobs = Surveyobs, # Survey observations (dimensions age, year, quarter, number of surveys)
Catchobs = Catchobs, # Catch observations  (dimensions age, year, quarter)
years = years, # Years to run
nseason = nseason, # Number of seasons
ages = ages, # Ages of the species
recseason = 2, # Season where recruitment occurs
Fmaxage = 3, # Fully selected fishing mortality age
Qminage = c(1,0), # minimum age in surveys
Qmaxage = c(3,1),
isFseason = c(1,0), # Seasons to calculate fishing in
effort = Feffort,
blocks = c(1983,1989, 1999,2005 ,2010),
endFseason = 2, # which season does fishing stop in the final year of data
nocatch = as.matrix(nocatch),
surveyStart = c(0, .75),
surveyEnd =  c(0,1 ), # Does the survey last throughout the season it's conducted?
surveySeason = c(1,2), # Which seasons do the surveys occur in
surveyCV =  matrix(c(1,3, # Add ages for survey CV
0,1),
nrow = 2, ncol = nsurvey),
catchCV = matrix(c(0,1,1,3,3), # Add ages for catch cv
nrow = length(ages), ncol = nseason),
SDR_catch = SDR_catch,
recmodel = 2, # Chose recruitment model (2 = estimated)
beta = beta, # Hockey stick plateau
nllfactor = c(1,1,0.05) # Factor for relative strength of log-likelihood
)
# Try initial parameters in weird spots
parms <- getSMSpar_sandeel(wd, rec_fac = rec_fac,
df.tmb$nyear)
# parms <- parms.true
parms.test <- list(logRin = rep(18, df.tmb$nyears),
logNinit = rep(15, df.tmb$nage-1),
Fseason = rep(0.5, 5),
Fage = matrix(1, nrow = max(df.tmb$bidx), ncol = df.tmb$nage),
SDsurvey = rep(0.2, df.tmb$nage),
logQ = rep(1, df.tmb$nage),
logalpha = 2,
logSDrec = log(0.5))
obj <-MakeADFun(df.tmb,parms.test,DLL="sms_sandeel")#, map = list('pin' = as.factor(NA)))
x <- obj$report()
x$Mean_F
plot(x$Mean_F)
# Run sprat from R
source('R/load_files_sandeel.R')
source('R/mtrx_forward.R')
source('R/getQ.R')
source('R/runSandeelAssessment.R')
source('R/om_to_tmb.R')
# Working directory for sms model
wd = 'data/Sandeel_1r/'
dat <- getSMSdata_sandeel(wd)
sandeel <- dat[['sumdata']]
sandeel.age <- dat[['agedata']]
rec_fac <- exp(as.numeric(read.csv(file.path(wd, 'rec_scale.out'), sep= '')[2]))
pars <- getSMSpar_sandeel(wd, rec_fac, nyear = length(sandeel$Year))
# Output data from SMS to compare model with
# Some basic data to run the model
years <- sandeel$Year
nyear <- length(years)
ages <- 0:4
nseason <- 2 # Number of seasons
beta <- 110000
# Fishing effort
SSBtest <- seq(0, max(sandeel$SSB), length.out = 100)
Rpred <- exp(pars$logalpha)+log(SSBtest)
Rpred[SSBtest>= beta] <- exp(pars$logalpha)+log(beta)
plot(SSBtest, exp(Rpred), type = 'l', ylim = c(0, max(sandeel$Recruits)))
points(sandeel$SSB, sandeel$Recruits)
# Get the effort data
Feffort <- matrix(scan(file.path(wd,'effort.in'), comment.char = '#'),
ncol = 2, nrow = nyear)
# Normalize effort to 1
# Format input data matrices into TMB style
mtrx <- sumtable_to_matrix(sandeel.age)
Surveyobs <- survey_to_matrix(dat[['survey']], years,quarter = 1:2)
Catchobs <- canum_to_matrix(dat[['canum']],quarter = 1:2)
nsurvey <- dim(Surveyobs)[4]
SDR_catch <-  t(sqrt(matrix(c(0,1.659,
0.348,   0.587,
0.348 ,  0.587,
0.661  , 1.019,
0.661   ,1.019), nrow = 2, ncol = 5)))
Surveyobs[5,,1,1] <- -1
nocatch <- read.table('data/Sandeel_1r/zero_catch_year_season.in', comment = '#', skip = 3)
#Feffort[which(df.tmb$years == 2013),2] <- 0 # This is different two places in the input files
df.tmb <- get_TMB_parameters(
mtrx = mtrx, # List that contains M, mat, west, weca
Surveyobs = Surveyobs, # Survey observations (dimensions age, year, quarter, number of surveys)
Catchobs = Catchobs, # Catch observations  (dimensions age, year, quarter)
years = years, # Years to run
nseason = nseason, # Number of seasons
ages = ages, # Ages of the species
recseason = 2, # Season where recruitment occurs
Fmaxage = 3, # Fully selected fishing mortality age
Qminage = c(1,0), # minimum age in surveys
Qmaxage = c(3,1),
isFseason = c(1,0), # Seasons to calculate fishing in
effort = Feffort,
blocks = c(1983,1989, 1999,2005 ,2010),
endFseason = 2, # which season does fishing stop in the final year of data
nocatch = as.matrix(nocatch),
surveyStart = c(0, .75),
surveyEnd =  c(0,1 ), # Does the survey last throughout the season it's conducted?
surveySeason = c(1,2), # Which seasons do the surveys occur in
surveyCV =  matrix(c(1,3, # Add ages for survey CV
0,1),
nrow = 2, ncol = nsurvey),
catchCV = matrix(c(0,1,1,3,3), # Add ages for catch cv
nrow = length(ages), ncol = nseason),
SDR_catch = SDR_catch,
recmodel = 2, # Chose recruitment model (2 = estimated)
beta = beta, # Hockey stick plateau
nllfactor = c(1,1,0.05) # Factor for relative strength of log-likelihood
)
# Try initial parameters in weird spots
parms <- getSMSpar_sandeel(wd, rec_fac = rec_fac,
df.tmb$nyear)
# parms <- parms.true
parms.test <- list(logRin = rep(18, df.tmb$nyears),
logNinit = rep(15, df.tmb$nage-1),
Fseason = rep(0.5, 5),
Fage = matrix(1, nrow = max(df.tmb$bidx), ncol = df.tmb$nage),
SDsurvey = rep(0.2, df.tmb$nage),
logQ = rep(1, df.tmb$nage),
logalpha = 2,
logSDrec = log(0.5))
obj <-MakeADFun(df.tmb,parms.test,DLL="sms_sandeel")#, map = list('pin' = as.factor(NA)))
x <- obj$report()
x$Mean_F
plot(x$Mean_F)
# Run sprat from R
source('R/load_files_sandeel.R')
# Run sprat from R
source('R/load_files_sandeel.R')
# Run sprat from R
source('R/load_files_sandeel.R')
source('R/mtrx_forward.R')
source('R/getQ.R')
source('R/runSandeelAssessment.R')
source('R/om_to_tmb.R')
# Working directory for sms model
wd = 'data/Sandeel_1r/'
dat <- getSMSdata_sandeel(wd)
sandeel <- dat[['sumdata']]
sandeel.age <- dat[['agedata']]
rec_fac <- exp(as.numeric(read.csv(file.path(wd, 'rec_scale.out'), sep= '')[2]))
pars <- getSMSpar_sandeel(wd, rec_fac, nyear = length(sandeel$Year))
# Output data from SMS to compare model with
# Some basic data to run the model
years <- sandeel$Year
nyear <- length(years)
ages <- 0:4
nseason <- 2 # Number of seasons
beta <- 110000
# Fishing effort
SSBtest <- seq(0, max(sandeel$SSB), length.out = 100)
Rpred <- exp(pars$logalpha)+log(SSBtest)
Rpred[SSBtest>= beta] <- exp(pars$logalpha)+log(beta)
plot(SSBtest, exp(Rpred), type = 'l', ylim = c(0, max(sandeel$Recruits)))
points(sandeel$SSB, sandeel$Recruits)
# Get the effort data
Feffort <- matrix(scan(file.path(wd,'effort.in'), comment.char = '#'),
ncol = 2, nrow = nyear)
# Normalize effort to 1
# Format input data matrices into TMB style
mtrx <- sumtable_to_matrix(sandeel.age)
Surveyobs <- survey_to_matrix(dat[['survey']], years,quarter = 1:2)
Catchobs <- canum_to_matrix(dat[['canum']],quarter = 1:2)
nsurvey <- dim(Surveyobs)[4]
SDR_catch <-  t(sqrt(matrix(c(0,1.659,
0.348,   0.587,
0.348 ,  0.587,
0.661  , 1.019,
0.661   ,1.019), nrow = 2, ncol = 5)))
Surveyobs[5,,1,1] <- -1
nocatch <- read.table('data/Sandeel_1r/zero_catch_year_season.in', comment = '#', skip = 3)
#Feffort[which(df.tmb$years == 2013),2] <- 0 # This is different two places in the input files
df.tmb <- get_TMB_parameters(
mtrx = mtrx, # List that contains M, mat, west, weca
Surveyobs = Surveyobs, # Survey observations (dimensions age, year, quarter, number of surveys)
Catchobs = Catchobs, # Catch observations  (dimensions age, year, quarter)
years = years, # Years to run
nseason = nseason, # Number of seasons
ages = ages, # Ages of the species
recseason = 2, # Season where recruitment occurs
Fmaxage = 3, # Fully selected fishing mortality age
Qminage = c(1,0), # minimum age in surveys
Qmaxage = c(3,1),
isFseason = c(1,0), # Seasons to calculate fishing in
effort = Feffort,
blocks = c(1983,1989, 1999,2005 ,2010),
endFseason = 2, # which season does fishing stop in the final year of data
nocatch = as.matrix(nocatch),
surveyStart = c(0, .75),
surveyEnd =  c(0,1 ), # Does the survey last throughout the season it's conducted?
surveySeason = c(1,2), # Which seasons do the surveys occur in
surveyCV =  matrix(c(1,3, # Add ages for survey CV
0,1),
nrow = 2, ncol = nsurvey),
catchCV = matrix(c(0,1,1,3,3), # Add ages for catch cv
nrow = length(ages), ncol = nseason),
SDR_catch = SDR_catch,
recmodel = 2, # Chose recruitment model (2 = estimated)
beta = beta, # Hockey stick plateau
nllfactor = c(1,1,0.05) # Factor for relative strength of log-likelihood
)
# Try initial parameters in weird spots
parms <- getSMSpar_sandeel(wd, rec_fac = rec_fac,
df.tmb$nyear)
# parms <- parms.true
parms.test <- list(logRin = rep(18, df.tmb$nyears),
logNinit = rep(15, df.tmb$nage-1),
Fseason = rep(0.5, 5),
Fage = matrix(1, nrow = max(df.tmb$bidx), ncol = df.tmb$nage),
SDsurvey = rep(0.2, df.tmb$nage),
logQ = rep(1, df.tmb$nage),
logalpha = 2,
logSDrec = log(0.5))
obj <-MakeADFun(df.tmb,parms.test,DLL="sms_sandeel")#, map = list('pin' = as.factor(NA)))
x <- obj$report()
x$Mean_F
plot(x$Mean_F)
plot(x$Mean_F, type= 'l')
plot(x$Mean_F/2, type= 'l')
lines(sandeel$mean.F)
plot(x$Mean_F/3, type= 'l')
lines(sandeel$mean.F)
source('R/load_files_sandeel.R')
source('R/mtrx_forward.R')
source('R/getQ.R')
source('R/runSandeelAssessment.R')
source('R/om_to_tmb.R')
# Working directory for sms model
wd = 'data/Sandeel_1r/'
dat <- getSMSdata_sandeel(wd)
sandeel <- dat[['sumdata']]
sandeel.age <- dat[['agedata']]
rec_fac <- exp(as.numeric(read.csv(file.path(wd, 'rec_scale.out'), sep= '')[2]))
pars <- getSMSpar_sandeel(wd, rec_fac, nyear = length(sandeel$Year))
# Output data from SMS to compare model with
# Some basic data to run the model
years <- sandeel$Year
nyear <- length(years)
ages <- 0:4
nseason <- 2 # Number of seasons
beta <- 110000
# Fishing effort
SSBtest <- seq(0, max(sandeel$SSB), length.out = 100)
Rpred <- exp(pars$logalpha)+log(SSBtest)
Rpred[SSBtest>= beta] <- exp(pars$logalpha)+log(beta)
plot(SSBtest, exp(Rpred), type = 'l', ylim = c(0, max(sandeel$Recruits)))
points(sandeel$SSB, sandeel$Recruits)
# Get the effort data
Feffort <- matrix(scan(file.path(wd,'effort.in'), comment.char = '#'),
ncol = 2, nrow = nyear)
# Normalize effort to 1
# Format input data matrices into TMB style
mtrx <- sumtable_to_matrix(sandeel.age)
Surveyobs <- survey_to_matrix(dat[['survey']], years,quarter = 1:2)
Catchobs <- canum_to_matrix(dat[['canum']],quarter = 1:2)
nsurvey <- dim(Surveyobs)[4]
SDR_catch <-  t(sqrt(matrix(c(0,1.659,
0.348,   0.587,
0.348 ,  0.587,
0.661  , 1.019,
0.661   ,1.019), nrow = 2, ncol = 5)))
Surveyobs[5,,1,1] <- -1
nocatch <- read.table('data/Sandeel_1r/zero_catch_year_season.in', comment = '#', skip = 3)
#Feffort[which(df.tmb$years == 2013),2] <- 0 # This is different two places in the input files
df.tmb <- get_TMB_parameters(
mtrx = mtrx, # List that contains M, mat, west, weca
Surveyobs = Surveyobs, # Survey observations (dimensions age, year, quarter, number of surveys)
Catchobs = Catchobs, # Catch observations  (dimensions age, year, quarter)
years = years, # Years to run
nseason = nseason, # Number of seasons
ages = ages, # Ages of the species
recseason = 2, # Season where recruitment occurs
Fmaxage = 3, # Fully selected fishing mortality age
Qminage = c(1,0), # minimum age in surveys
Qmaxage = c(3,1),
isFseason = c(1,0), # Seasons to calculate fishing in
effort = Feffort,
blocks = c(1983,1989, 1999,2005 ,2010),
endFseason = 2, # which season does fishing stop in the final year of data
nocatch = as.matrix(nocatch),
surveyStart = c(0, .75),
surveyEnd =  c(0,1 ), # Does the survey last throughout the season it's conducted?
surveySeason = c(1,2), # Which seasons do the surveys occur in
surveyCV =  matrix(c(1,3, # Add ages for survey CV
0,1),
nrow = 2, ncol = nsurvey),
catchCV = matrix(c(0,1,1,3,3), # Add ages for catch cv
nrow = length(ages), ncol = nseason),
SDR_catch = SDR_catch,
recmodel = 2, # Chose recruitment model (2 = estimated)
beta = beta, # Hockey stick plateau
nllfactor = c(1,1,0.05) # Factor for relative strength of log-likelihood
)
# Try initial parameters in weird spots
parms <- getSMSpar_sandeel(wd, rec_fac = rec_fac,
df.tmb$nyear)
# parms <- parms.true
parms.test <- list(logRin = rep(18, df.tmb$nyears),
logNinit = rep(15, df.tmb$nage-1),
Fseason = rep(0.5, 5),
Fage = matrix(1, nrow = max(df.tmb$bidx), ncol = df.tmb$nage),
SDsurvey = rep(0.2, df.tmb$nage),
logQ = rep(1, df.tmb$nage),
logalpha = 2,
logSDrec = log(0.5))
obj <-MakeADFun(df.tmb,parms.test,DLL="sms_sandeel")#, map = list('pin' = as.factor(NA)))
x <- obj$report()
x$Mean_F
plot(x$Mean_F)
lines(sandeel$mean.F)
setwd("~/Github/BOFFsims/R_scripts")
setwd("~/Github/BOFFsims/")
require('scam')
require('tidyverse')
require('patchwork')
source('R/fn_sims.R')
source('R/calcSSB0.R')
source('R/run_agebased_model_true_Catch.R')
source('R/load_data_seasons.R')
source('R/est_eggs.R')
source('R/plotRecruitment.R')
source('R/getEquilibrium.R')
source('R/runScenarios.R')
eggs <- read.csv('data/fecundityEggSizeFemaleSize.csv')
eggs$weight <- 0.01*(eggs$FemaleSize_mm/10)^3 # Fix this later
# All eggs as a function of size
eggs <- eggs %>% group_by(Species) %>%
mutate(relweight = weight/max(weight),
releggs = Fecundity_nOfEggs_per_female/max(Fecundity_nOfEggs_per_female)
)
x <- eggs[is.na(eggs$relweight) == 0,]$relweight
y <- eggs[is.na(eggs$relweight) == 0,]$releggs
# all relative eggs
#parms <- est_eggs(x,y)
# Just take the cod eggs most of the other fish are not really big fisheries
cod <- eggs[eggs$Species == 'Gadus morhua',]
cod$weight <- 0.01*(cod$FemaleSize_mm/10)^3 # Fix the parameters for weight lenght to whatever here
codest <- est_eggs(x = cod$weight,
y = cod$Fecundity_nOfEggs_per_female)
# Life history
Linf <- 50
K <-  0.4
SDR <- 0.2
rho <- c(.01,.1, .5, .7, .99) # Try five different auto correlation coefficients
maxage <- 10
tau <- 3
M0 <- .4
tau_sel <- 2
egg.scale <- 1e5
R0 = 1000
recruitment = 'BH_R'
nspecies <- 1
F0 <- seq(0.1,1, length.out = 5)
# Calculate Fmsy as a function of LH parameters
Fmsy <- seq(0,2, length.out = 50)
Catch <- data.frame(
F0 = rep(Fmsy, nspecies),
species = rep(Linf, each = length(Fmsy)*nspecies),
Catch = NA
)
for(i in 1:nspecies){
for(j in 1:length(Fmsy)){
df <- load_data_seasons(nseason = 1,
nyear = 100,# Set up parameters
Linf = Linf[i],
maxage = maxage[i],
tau = tau[i],
K = K[i],
t0 = 0,
tau_sel = tau_sel[i],
M= M0[i],
SDR = 0, # Recruitment deviations - set to zero to calculate lambda
fishing.type = 'constant',
mortality = 'constant',
recruitment = recruitment,
negg = codest$parameters[['alpha.lin']]/egg.scale[i],
eggbeta = codest$parameters[['beta.lin']],
F0 = Fmsy[j], # Set to zero to calc lambda
R0 = R0) # Specify parameters
tmp <- run.agebased.true.catch(df)
Catch[Catch$species == Linf[i] & Catch$F0 == Fmsy[j],]$Catch <- tmp$Catch[df$tEnd]
}
}
ggplot(Catch, aes(x = F0, y = Catch, color = as.factor(species)))+geom_line()+theme_classic()+
facet_wrap(~species, scales = 'free_y')+theme(legend.position = 'none')
F0 <- 0.2
for(i in 1:length(rho)){
df.in <- fn_sims(tau = tau,
Linf = Linf,
maxage = maxage,
K = K,
t0 = 0,
SDR = SDR,
F0 = F0,
M = M0,
tau_sel = tau_sel,
egg.scale = egg.scale,
R0 = R0,
rho = rho[i],
recruitment = 'BH_R',
lambda.slope = .7,
mortality = 'constant',
fishing.type = 'AR',
recruitment.type = 'AR'
)
if(i == 1){
df.out <- df.in[[1]]
df.N <- df.in[[3]]
df.save <- df.in[[2]]
}else{
df.out <- rbind(df.out, df.in[[1]])
df.N <- rbind(df.N, df.in[[3]])
df.save <- rbind(df.save, df.in[[2]])
}
}
# remove the ones with zero recruitment
df.plot <- df.out[df.out$rec>1,]
p1 <- ggplot(df.plot[df.plot$years > 50 ,], aes(x = mweight, y = SSBprop, color = model))+geom_point()+
facet_wrap(~rho, scales = 'free')+theme_bw()
p2 <- ggplot(df.plot[df.plot$years > 50 ,], aes(x = SSBprop, y = Rdev, color = model))+geom_point()+
facet_wrap(~rho, scales = 'free')+theme_bw()+geom_smooth(method = 'lm')
p3 <- ggplot(df.plot[df.plot$years > 50 ,], aes(x = SSBprop, y = recR0, color = model))+geom_point()+
facet_wrap(~rho, scales = 'free')+theme_bw()+geom_smooth(method = 'lm')
p1/p2/p3
prop.plot <- df.plot %>% group_by(model, run, Linf, SDR, K, tau, rho) %>% summarise(SSBcorRR0  = cor(SSBprop, recR0),
weightcorRR0  = cor(mweight, recR0),
agecorRR0  = cor(mage, recR0),
SSBcorRtot  = cor(SSBprop, rtot),
weightcorRtot  = cor(mweight, rtot),
agecorRtot  = cor(mage, rtot),
SSBcorRdev  = cor(SSBprop, Rresid),
weightcorRdev  = cor(mweight, Rresid),
agecorRdev  = cor(mage, Rresid)) %>%
pivot_longer(8:16)
lims <- max(abs(prop.plot$value))
p1 <-  ggplot(prop.plot, aes(x = model, y = value, fill = model))+geom_violin()+geom_boxplot(width = 0.1)+
facet_grid(factor(rho)~name)+scale_x_discrete()+
theme_bw()+theme(axis.text.x = element_blank())+coord_cartesian(ylim = c(-lims,lims))+geom_hline(aes(yintercept = 0), linetype = 2)
p1
ggsave('figures/rho_violin.png', p1, width = 16, height = 16)
# Plot some stock recruitment
idx <- c(1, 15, 25, 30, 50)
# Time series
p2 <- ggplot(df.save[df.save$run %in% idx,], aes(x = years, y = R, color = factor(run)))+
geom_line()+theme_classic()+facet_grid(rho~model)
p2
p3 <- ggplot(df.save[df.save$run %in% idx,], aes(x = years, y = SSB, color = factor(run)))+
geom_line()+theme_classic()+facet_grid(rho~model)
p3
p2 <- ggplot(df.save[df.save$run %in% idx,], aes(x = years, y = Rtot, color = factor(run)))+
geom_line()+theme_classic()+facet_grid(rho~model)
p2
p2 <- ggplot(df.save[df.save$run %in% idx,], aes(x = SSB, y = R, color = factor(run)))+
geom_point()+theme_classic()+facet_grid(rho~model)
p2
# Use the scam fit for a range of models #
require('tidyverse')
require('patchwork')
